// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finalProject.Models;

#nullable disable

namespace finalProject.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20240306161644_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("finalProject.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<TimeOnly>("arrival")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("departure")
                        .HasColumnType("time");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("finalProject.Models.Holiday", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.ToTable("holidays");
                });

            modelBuilder.Entity("finalProject.Models.Logs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("day")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("day_arrival")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("day_departure")
                        .HasColumnType("time");

                    b.Property<int>("emp_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("emp_id");

                    b.ToTable("logs");
                });

            modelBuilder.Entity("finalProject.Models.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdditionalHourRate")
                        .HasColumnType("int");

                    b.Property<int>("HolidayDayOne")
                        .HasColumnType("int");

                    b.Property<int>("HolidayDayTwo")
                        .HasColumnType("int");

                    b.Property<int>("LateDeductionRate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("finalProject.Models.Logs", b =>
                {
                    b.HasOne("finalProject.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("emp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });
#pragma warning restore 612, 618
        }
    }
}
